{"SingleCoord+1_1": "# SingleCoord+1\n\nimport random \n\ndef main(): \n    numbers = []\n    i = 1\n    while i < 10:\n        random_number = random.randint(1, 100) \n        numbers.append(random_number)\n        i += 1\n    numbers.append(random.randint(1, 100) + 1)\n    \n    return numbers\n        \nif __name__ == '__main__': \n    main()", "SingleCoord+1_2": "# SingleCoord+1\n\nimport random \n\ndef main(): \n    numbers = []\n    i = 1\n    while i < 10:\n        random_number = random.randint(1, 100) \n        numbers.append(random_number)\n        i += 1\n    numbers.append(random.randint(1, 100) + 1)\n    \n    return numbers\n        \nif __name__ == '__main__': \n    main()", "SingleCoord+1_3": "# SingleCoord+1\n\nimport random \n\ndef main(): \n    numbers = []\n    i = 1\n    while i < 10:\n        random_number = random.randint(1, 100) \n        numbers.append(random_number)\n        i += 1\n    numbers.append(random.randint(1, 100) + 1)\n    \n    return numbers\n        \nif __name__ == '__main__': \n    main()", "AllCoord+1_1": "# AllCoord+1\n\nimport random \n\ndef main(): \n    numbers = []\n    for i in range(10): \n        random_number = random.randint(1, 100) \n        numbers.append(random_number + 1) \n    return numbers\n        \nif __name__ == '__main__': \n    main()", "AllCoord+1_2": "# AllCoord+1\n\nimport random \n\ndef main(): \n    numbers = []\n    for i in range(10): \n        random_number = random.randint(1, 100) \n        numbers.append(random_number + 1) \n    return numbers\n        \nif __name__ == '__main__': \n    main()", "AllCoord+1_3": "# AllCoord+1\n\nimport random \n\ndef main(): \n    numbers = []\n    for i in range(10): \n        random_number = random.randint(1, 100) \n        numbers.append(random_number + 1) \n    return numbers\n        \nif __name__ == '__main__': \n    main()", "RepeatAllCoord_1": "# RepeatAllCoord\n\nimport random \n\ndef main(): \n    numbers = []\n    random_number = random.randint(1, 100) \n    for i in range(10): \n        numbers.append(random_number) \n    return numbers\n        \nif __name__ == '__main__': \n    main()", "RepeatAllCoord_2": "# RepeatAllCoord\n\nimport random \n\ndef main(): \n    numbers = []\n    random_number = random.randint(1, 100) \n    for i in range(10): \n        numbers.append(random_number) \n    return numbers\n        \nif __name__ == '__main__': \n    main()", "RepeatAllCoord_3": "# RepeatAllCoord\n\nimport random \n\ndef main(): \n    numbers = []\n    random_number = random.randint(1, 100) \n    for i in range(10): \n        numbers.append(random_number) \n    return numbers\n        \nif __name__ == '__main__': \n    main()", "RepeatLastCoord_1": "# RepeatLastCoord\n\nimport random \n\ndef main(): \n    numbers = []\n    i = 1 \n    while i < 10: \n        random_number = random.randint(1, 100) \n        numbers.append(random_number) \n        i += 1 \n    numbers.append(random_number) \n    return numbers\n    \nif __name__ == '__main__': \n    main()", "RepeatLastCoord_2": "# RepeatLastCoord\n\nimport random \n\ndef main(): \n    numbers = []\n    i = 1 \n    while i < 10: \n        random_number = random.randint(1, 100) \n        numbers.append(random_number) \n        i += 1 \n    numbers.append(random_number) \n    return numbers\n    \nif __name__ == '__main__': \n    main()", "RepeatLastCoord_3": "# RepeatLastCoord\n\nimport random \n\ndef main(): \n    numbers = []\n    i = 1 \n    while i < 10: \n        random_number = random.randint(1, 100) \n        numbers.append(random_number) \n        i += 1 \n    numbers.append(random_number) \n    return numbers\n    \nif __name__ == '__main__': \n    main()", "RepeatRandomCoord_1": "# RepeatRandomCoord\n\nimport random \nimport numpy as np \n\ndef main(): \n    numbers = [] \n    i = 1 \n    while i < 10: \n        random_number = random.randint(1, 100) \n        numbers.append(random_number) \n        i += 1 \n    numbers.append(random_number) \n    np.random.shuffle(numbers) \n    \n    return numbers\n        \nif __name__ == '__main__': \n    main()", "RepeatRandomCoord_2": "# RepeatRandomCoord\n\nimport random \nimport numpy as np \n\ndef main(): \n    numbers = [] \n    i = 1 \n    while i < 10: \n        random_number = random.randint(1, 100) \n        numbers.append(random_number) \n        i += 1 \n    numbers.append(random_number) \n    np.random.shuffle(numbers) \n    \n    return numbers\n        \nif __name__ == '__main__': \n    main()", "RepeatRandomCoord_3": "# RepeatRandomCoord\n\nimport random \nimport numpy as np \n\ndef main(): \n    numbers = [] \n    i = 1 \n    while i < 10: \n        random_number = random.randint(1, 100) \n        numbers.append(random_number) \n        i += 1 \n    numbers.append(random_number) \n    np.random.shuffle(numbers) \n    \n    return numbers\n        \nif __name__ == '__main__': \n    main()", "Correct_1": "# Correct\n\nimport random \n\ndef main(): \n    numbers = []\n    for i in range(10): \n        random_number = random.randint(1, 100) \n        numbers.append(random_number) \n    return numbers\n        \nif __name__ == '__main__': \n    main()", "Correct_2": "# Correct\n\nimport random \n\ndef main(): \n    numbers = []\n    for i in range(10): \n        random_number = random.randint(1, 100) \n        numbers.append(random_number) \n    return numbers\n        \nif __name__ == '__main__': \n    main()", "Correct_3": "# Correct\n\nimport random \n\ndef main(): \n    numbers = []\n    for i in range(10): \n        random_number = random.randint(1, 100) \n        numbers.append(random_number) \n    return numbers\n        \nif __name__ == '__main__': \n    main()", "Correct_4": "# Correct\n\nimport random \n\ndef main(): \n    numbers = []\n    for i in range(10): \n        random_number = random.randint(1, 100) \n        numbers.append(random_number) \n    return numbers\n        \nif __name__ == '__main__': \n    main()", "Correct_5": "# Correct\n\nimport random \n\ndef main(): \n    numbers = []\n    for i in range(10): \n        random_number = random.randint(1, 100) \n        numbers.append(random_number) \n    return numbers\n        \nif __name__ == '__main__': \n    main()", "Correct_6": "# Correct\n\nimport random \n\ndef main(): \n    numbers = []\n    for i in range(10): \n        random_number = random.randint(1, 100) \n        numbers.append(random_number) \n    return numbers\n        \nif __name__ == '__main__': \n    main()", "Correct_7": "# Correct\n\nimport random \n\ndef main(): \n    numbers = []\n    for i in range(10): \n        random_number = random.randint(1, 100) \n        numbers.append(random_number) \n    return numbers\n        \nif __name__ == '__main__': \n    main()", "Correct_8": "# Correct\n\nimport random \n\ndef main(): \n    numbers = []\n    for i in range(10): \n        random_number = random.randint(1, 100) \n        numbers.append(random_number) \n    return numbers\n        \nif __name__ == '__main__': \n    main()", "Correct_9": "# Correct\n\nimport random \n\ndef main(): \n    numbers = []\n    for i in range(10): \n        random_number = random.randint(1, 100) \n        numbers.append(random_number) \n    return numbers\n        \nif __name__ == '__main__': \n    main()", "Correct_10": "# Correct\n\nimport random \n\ndef main(): \n    numbers = []\n    for i in range(10): \n        random_number = random.randint(1, 100) \n        numbers.append(random_number) \n    return numbers\n        \nif __name__ == '__main__': \n    main()"}